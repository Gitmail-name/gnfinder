// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protob.proto

package protob

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MatchType int32

const (
	MatchType_NONE          MatchType = 0
	MatchType_EXACT         MatchType = 1
	MatchType_FUZZY         MatchType = 2
	MatchType_PARTIAL_EXACT MatchType = 3
	MatchType_PARTIAL_FUZZY MatchType = 4
)

var MatchType_name = map[int32]string{
	0: "NONE",
	1: "EXACT",
	2: "FUZZY",
	3: "PARTIAL_EXACT",
	4: "PARTIAL_FUZZY",
}

var MatchType_value = map[string]int32{
	"NONE":          0,
	"EXACT":         1,
	"FUZZY":         2,
	"PARTIAL_EXACT": 3,
	"PARTIAL_FUZZY": 4,
}

func (x MatchType) String() string {
	return proto.EnumName(MatchType_name, int32(x))
}

func (MatchType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{0}
}

type AnnotNomenType int32

const (
	AnnotNomenType_NO_ANNOT  AnnotNomenType = 0
	AnnotNomenType_SP_NOV    AnnotNomenType = 1
	AnnotNomenType_COMB_NOV  AnnotNomenType = 2
	AnnotNomenType_SUBSP_NOV AnnotNomenType = 3
)

var AnnotNomenType_name = map[int32]string{
	0: "NO_ANNOT",
	1: "SP_NOV",
	2: "COMB_NOV",
	3: "SUBSP_NOV",
}

var AnnotNomenType_value = map[string]int32{
	"NO_ANNOT":  0,
	"SP_NOV":    1,
	"COMB_NOV":  2,
	"SUBSP_NOV": 3,
}

func (x AnnotNomenType) String() string {
	return proto.EnumName(AnnotNomenType_name, int32(x))
}

func (AnnotNomenType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{1}
}

type Approach int32

const (
	Approach_HEURISTIC Approach = 0
	Approach_BAYES     Approach = 1
)

var Approach_name = map[int32]string{
	0: "HEURISTIC",
	1: "BAYES",
}

var Approach_value = map[string]int32{
	"HEURISTIC": 0,
	"BAYES":     1,
}

func (x Approach) String() string {
	return proto.EnumName(Approach_name, int32(x))
}

func (Approach) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{2}
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{0}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type Pong struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{1}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Version struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Build                string   `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{2}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Version) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

type Params struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	NoBayes              bool     `protobuf:"varint,2,opt,name=no_bayes,json=noBayes,proto3" json:"no_bayes,omitempty"`
	Language             string   `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	DetectLanguage       bool     `protobuf:"varint,4,opt,name=detect_language,json=detectLanguage,proto3" json:"detect_language,omitempty"`
	Verification         bool     `protobuf:"varint,5,opt,name=verification,proto3" json:"verification,omitempty"`
	TokensAround         int32    `protobuf:"varint,6,opt,name=tokens_around,json=tokensAround,proto3" json:"tokens_around,omitempty"`
	Sources              []int32  `protobuf:"varint,7,rep,packed,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{3}
}

func (m *Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params.Unmarshal(m, b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params.Marshal(b, m, deterministic)
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return xxx_messageInfo_Params.Size(m)
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Params) GetNoBayes() bool {
	if m != nil {
		return m.NoBayes
	}
	return false
}

func (m *Params) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Params) GetDetectLanguage() bool {
	if m != nil {
		return m.DetectLanguage
	}
	return false
}

func (m *Params) GetVerification() bool {
	if m != nil {
		return m.Verification
	}
	return false
}

func (m *Params) GetTokensAround() int32 {
	if m != nil {
		return m.TokensAround
	}
	return 0
}

func (m *Params) GetSources() []int32 {
	if m != nil {
		return m.Sources
	}
	return nil
}

type Output struct {
	Date                 string        `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	FinderVersion        string        `protobuf:"bytes,2,opt,name=finder_version,json=finderVersion,proto3" json:"finder_version,omitempty"`
	Approach             []Approach    `protobuf:"varint,3,rep,packed,name=approach,proto3,enum=protob.Approach" json:"approach,omitempty"`
	TokensAround         int32         `protobuf:"varint,4,opt,name=tokens_around,json=tokensAround,proto3" json:"tokens_around,omitempty"`
	Language             string        `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	LanguageDetected     string        `protobuf:"bytes,6,opt,name=language_detected,json=languageDetected,proto3" json:"language_detected,omitempty"`
	DetectLanguage       bool          `protobuf:"varint,7,opt,name=detect_language,json=detectLanguage,proto3" json:"detect_language,omitempty"`
	TotalTokens          int32         `protobuf:"varint,8,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	TotalCandidates      int32         `protobuf:"varint,9,opt,name=total_candidates,json=totalCandidates,proto3" json:"total_candidates,omitempty"`
	TotalNames           int32         `protobuf:"varint,10,opt,name=total_names,json=totalNames,proto3" json:"total_names,omitempty"`
	Names                []*NameString `protobuf:"bytes,11,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{4}
}

func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (m *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(m, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Output) GetFinderVersion() string {
	if m != nil {
		return m.FinderVersion
	}
	return ""
}

func (m *Output) GetApproach() []Approach {
	if m != nil {
		return m.Approach
	}
	return nil
}

func (m *Output) GetTokensAround() int32 {
	if m != nil {
		return m.TokensAround
	}
	return 0
}

func (m *Output) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Output) GetLanguageDetected() string {
	if m != nil {
		return m.LanguageDetected
	}
	return ""
}

func (m *Output) GetDetectLanguage() bool {
	if m != nil {
		return m.DetectLanguage
	}
	return false
}

func (m *Output) GetTotalTokens() int32 {
	if m != nil {
		return m.TotalTokens
	}
	return 0
}

func (m *Output) GetTotalCandidates() int32 {
	if m != nil {
		return m.TotalCandidates
	}
	return 0
}

func (m *Output) GetTotalNames() int32 {
	if m != nil {
		return m.TotalNames
	}
	return 0
}

func (m *Output) GetNames() []*NameString {
	if m != nil {
		return m.Names
	}
	return nil
}

type NameString struct {
	Cardinality          int32          `protobuf:"varint,1,opt,name=cardinality,proto3" json:"cardinality,omitempty"`
	Verbatim             string         `protobuf:"bytes,3,opt,name=verbatim,proto3" json:"verbatim,omitempty"`
	Name                 string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Odds                 float32        `protobuf:"fixed32,5,opt,name=odds,proto3" json:"odds,omitempty"`
	AnnotNomen           string         `protobuf:"bytes,6,opt,name=annot_nomen,json=annotNomen,proto3" json:"annot_nomen,omitempty"`
	AnnotNomenType       AnnotNomenType `protobuf:"varint,7,opt,name=annot_nomen_type,json=annotNomenType,proto3,enum=protob.AnnotNomenType" json:"annot_nomen_type,omitempty"`
	OffsetStart          int32          `protobuf:"varint,8,opt,name=offset_start,json=offsetStart,proto3" json:"offset_start,omitempty"`
	OffsetEnd            int32          `protobuf:"varint,9,opt,name=offset_end,json=offsetEnd,proto3" json:"offset_end,omitempty"`
	WordsBefore          []string       `protobuf:"bytes,10,rep,name=words_before,json=wordsBefore,proto3" json:"words_before,omitempty"`
	WordsAfter           []string       `protobuf:"bytes,11,rep,name=words_after,json=wordsAfter,proto3" json:"words_after,omitempty"`
	Verification         *Verification  `protobuf:"bytes,12,opt,name=verification,proto3" json:"verification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NameString) Reset()         { *m = NameString{} }
func (m *NameString) String() string { return proto.CompactTextString(m) }
func (*NameString) ProtoMessage()    {}
func (*NameString) Descriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{5}
}

func (m *NameString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameString.Unmarshal(m, b)
}
func (m *NameString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameString.Marshal(b, m, deterministic)
}
func (m *NameString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameString.Merge(m, src)
}
func (m *NameString) XXX_Size() int {
	return xxx_messageInfo_NameString.Size(m)
}
func (m *NameString) XXX_DiscardUnknown() {
	xxx_messageInfo_NameString.DiscardUnknown(m)
}

var xxx_messageInfo_NameString proto.InternalMessageInfo

func (m *NameString) GetCardinality() int32 {
	if m != nil {
		return m.Cardinality
	}
	return 0
}

func (m *NameString) GetVerbatim() string {
	if m != nil {
		return m.Verbatim
	}
	return ""
}

func (m *NameString) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NameString) GetOdds() float32 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *NameString) GetAnnotNomen() string {
	if m != nil {
		return m.AnnotNomen
	}
	return ""
}

func (m *NameString) GetAnnotNomenType() AnnotNomenType {
	if m != nil {
		return m.AnnotNomenType
	}
	return AnnotNomenType_NO_ANNOT
}

func (m *NameString) GetOffsetStart() int32 {
	if m != nil {
		return m.OffsetStart
	}
	return 0
}

func (m *NameString) GetOffsetEnd() int32 {
	if m != nil {
		return m.OffsetEnd
	}
	return 0
}

func (m *NameString) GetWordsBefore() []string {
	if m != nil {
		return m.WordsBefore
	}
	return nil
}

func (m *NameString) GetWordsAfter() []string {
	if m != nil {
		return m.WordsAfter
	}
	return nil
}

func (m *NameString) GetVerification() *Verification {
	if m != nil {
		return m.Verification
	}
	return nil
}

type Verification struct {
	BestResult           *ResultData   `protobuf:"bytes,1,opt,name=best_result,json=bestResult,proto3" json:"best_result,omitempty"`
	PreferredResults     []*ResultData `protobuf:"bytes,2,rep,name=preferred_results,json=preferredResults,proto3" json:"preferred_results,omitempty"`
	DataSourcesNum       int32         `protobuf:"varint,3,opt,name=data_sources_num,json=dataSourcesNum,proto3" json:"data_sources_num,omitempty"`
	DataSourceQuality    string        `protobuf:"bytes,4,opt,name=data_source_quality,json=dataSourceQuality,proto3" json:"data_source_quality,omitempty"`
	Retries              int32         `protobuf:"varint,5,opt,name=retries,proto3" json:"retries,omitempty"`
	Error                string        `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Verification) Reset()         { *m = Verification{} }
func (m *Verification) String() string { return proto.CompactTextString(m) }
func (*Verification) ProtoMessage()    {}
func (*Verification) Descriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{6}
}

func (m *Verification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Verification.Unmarshal(m, b)
}
func (m *Verification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Verification.Marshal(b, m, deterministic)
}
func (m *Verification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Verification.Merge(m, src)
}
func (m *Verification) XXX_Size() int {
	return xxx_messageInfo_Verification.Size(m)
}
func (m *Verification) XXX_DiscardUnknown() {
	xxx_messageInfo_Verification.DiscardUnknown(m)
}

var xxx_messageInfo_Verification proto.InternalMessageInfo

func (m *Verification) GetBestResult() *ResultData {
	if m != nil {
		return m.BestResult
	}
	return nil
}

func (m *Verification) GetPreferredResults() []*ResultData {
	if m != nil {
		return m.PreferredResults
	}
	return nil
}

func (m *Verification) GetDataSourcesNum() int32 {
	if m != nil {
		return m.DataSourcesNum
	}
	return 0
}

func (m *Verification) GetDataSourceQuality() string {
	if m != nil {
		return m.DataSourceQuality
	}
	return ""
}

func (m *Verification) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *Verification) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ResultData struct {
	DataSourceId           int32     `protobuf:"varint,1,opt,name=data_source_id,json=dataSourceId,proto3" json:"data_source_id,omitempty"`
	DataSourceTitle        string    `protobuf:"bytes,2,opt,name=data_source_title,json=dataSourceTitle,proto3" json:"data_source_title,omitempty"`
	TaxonId                string    `protobuf:"bytes,3,opt,name=taxon_id,json=taxonId,proto3" json:"taxon_id,omitempty"`
	MatchedName            string    `protobuf:"bytes,4,opt,name=matched_name,json=matchedName,proto3" json:"matched_name,omitempty"`
	MatchedCardinality     int32     `protobuf:"varint,5,opt,name=matched_cardinality,json=matchedCardinality,proto3" json:"matched_cardinality,omitempty"`
	MatchedCanonicalSimple string    `protobuf:"bytes,6,opt,name=matched_canonical_simple,json=matchedCanonicalSimple,proto3" json:"matched_canonical_simple,omitempty"`
	MatchedCanonicalFull   string    `protobuf:"bytes,7,opt,name=matched_canonical_full,json=matchedCanonicalFull,proto3" json:"matched_canonical_full,omitempty"`
	CurrentName            string    `protobuf:"bytes,8,opt,name=current_name,json=currentName,proto3" json:"current_name,omitempty"`
	CurrentCardinality     int32     `protobuf:"varint,9,opt,name=current_cardinality,json=currentCardinality,proto3" json:"current_cardinality,omitempty"`
	CurrentCanonicalSimple string    `protobuf:"bytes,10,opt,name=current_canonical_simple,json=currentCanonicalSimple,proto3" json:"current_canonical_simple,omitempty"`
	CurrentCanonicalFull   string    `protobuf:"bytes,11,opt,name=current_canonical_full,json=currentCanonicalFull,proto3" json:"current_canonical_full,omitempty"`
	Synonym                bool      `protobuf:"varint,12,opt,name=synonym,proto3" json:"synonym,omitempty"`
	ClassificationPath     string    `protobuf:"bytes,13,opt,name=classification_path,json=classificationPath,proto3" json:"classification_path,omitempty"`
	ClassificationRank     string    `protobuf:"bytes,14,opt,name=classification_rank,json=classificationRank,proto3" json:"classification_rank,omitempty"`
	ClassificationIds      string    `protobuf:"bytes,15,opt,name=classification_ids,json=classificationIds,proto3" json:"classification_ids,omitempty"`
	EditDistance           int32     `protobuf:"varint,16,opt,name=edit_distance,json=editDistance,proto3" json:"edit_distance,omitempty"`
	StemEditDistance       int32     `protobuf:"varint,17,opt,name=stem_edit_distance,json=stemEditDistance,proto3" json:"stem_edit_distance,omitempty"`
	MatchType              MatchType `protobuf:"varint,18,opt,name=match_type,json=matchType,proto3,enum=protob.MatchType" json:"match_type,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}  `json:"-"`
	XXX_unrecognized       []byte    `json:"-"`
	XXX_sizecache          int32     `json:"-"`
}

func (m *ResultData) Reset()         { *m = ResultData{} }
func (m *ResultData) String() string { return proto.CompactTextString(m) }
func (*ResultData) ProtoMessage()    {}
func (*ResultData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e471450a6e94b5eb, []int{7}
}

func (m *ResultData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultData.Unmarshal(m, b)
}
func (m *ResultData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultData.Marshal(b, m, deterministic)
}
func (m *ResultData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultData.Merge(m, src)
}
func (m *ResultData) XXX_Size() int {
	return xxx_messageInfo_ResultData.Size(m)
}
func (m *ResultData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultData.DiscardUnknown(m)
}

var xxx_messageInfo_ResultData proto.InternalMessageInfo

func (m *ResultData) GetDataSourceId() int32 {
	if m != nil {
		return m.DataSourceId
	}
	return 0
}

func (m *ResultData) GetDataSourceTitle() string {
	if m != nil {
		return m.DataSourceTitle
	}
	return ""
}

func (m *ResultData) GetTaxonId() string {
	if m != nil {
		return m.TaxonId
	}
	return ""
}

func (m *ResultData) GetMatchedName() string {
	if m != nil {
		return m.MatchedName
	}
	return ""
}

func (m *ResultData) GetMatchedCardinality() int32 {
	if m != nil {
		return m.MatchedCardinality
	}
	return 0
}

func (m *ResultData) GetMatchedCanonicalSimple() string {
	if m != nil {
		return m.MatchedCanonicalSimple
	}
	return ""
}

func (m *ResultData) GetMatchedCanonicalFull() string {
	if m != nil {
		return m.MatchedCanonicalFull
	}
	return ""
}

func (m *ResultData) GetCurrentName() string {
	if m != nil {
		return m.CurrentName
	}
	return ""
}

func (m *ResultData) GetCurrentCardinality() int32 {
	if m != nil {
		return m.CurrentCardinality
	}
	return 0
}

func (m *ResultData) GetCurrentCanonicalSimple() string {
	if m != nil {
		return m.CurrentCanonicalSimple
	}
	return ""
}

func (m *ResultData) GetCurrentCanonicalFull() string {
	if m != nil {
		return m.CurrentCanonicalFull
	}
	return ""
}

func (m *ResultData) GetSynonym() bool {
	if m != nil {
		return m.Synonym
	}
	return false
}

func (m *ResultData) GetClassificationPath() string {
	if m != nil {
		return m.ClassificationPath
	}
	return ""
}

func (m *ResultData) GetClassificationRank() string {
	if m != nil {
		return m.ClassificationRank
	}
	return ""
}

func (m *ResultData) GetClassificationIds() string {
	if m != nil {
		return m.ClassificationIds
	}
	return ""
}

func (m *ResultData) GetEditDistance() int32 {
	if m != nil {
		return m.EditDistance
	}
	return 0
}

func (m *ResultData) GetStemEditDistance() int32 {
	if m != nil {
		return m.StemEditDistance
	}
	return 0
}

func (m *ResultData) GetMatchType() MatchType {
	if m != nil {
		return m.MatchType
	}
	return MatchType_NONE
}

func init() {
	proto.RegisterEnum("protob.MatchType", MatchType_name, MatchType_value)
	proto.RegisterEnum("protob.AnnotNomenType", AnnotNomenType_name, AnnotNomenType_value)
	proto.RegisterEnum("protob.Approach", Approach_name, Approach_value)
	proto.RegisterType((*Void)(nil), "protob.Void")
	proto.RegisterType((*Pong)(nil), "protob.Pong")
	proto.RegisterType((*Version)(nil), "protob.Version")
	proto.RegisterType((*Params)(nil), "protob.Params")
	proto.RegisterType((*Output)(nil), "protob.Output")
	proto.RegisterType((*NameString)(nil), "protob.NameString")
	proto.RegisterType((*Verification)(nil), "protob.Verification")
	proto.RegisterType((*ResultData)(nil), "protob.ResultData")
}

func init() { proto.RegisterFile("protob.proto", fileDescriptor_e471450a6e94b5eb) }

var fileDescriptor_e471450a6e94b5eb = []byte{
	// 1190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x56, 0xcf, 0x72, 0xdb, 0xb6,
	0x13, 0xb6, 0x4c, 0xfd, 0xe3, 0x4a, 0x96, 0x29, 0x24, 0x93, 0xe1, 0x2f, 0xf3, 0xeb, 0x54, 0x65,
	0xd3, 0x56, 0x75, 0x13, 0xb7, 0xe3, 0xf4, 0x90, 0x9e, 0x5a, 0xd9, 0x96, 0x53, 0xcd, 0x24, 0x92,
	0x42, 0xc9, 0x9e, 0x26, 0x17, 0x0c, 0x24, 0x42, 0x36, 0xc7, 0x14, 0xa0, 0x82, 0xa0, 0x1b, 0x3d,
	0x41, 0x6f, 0xbd, 0xf5, 0x01, 0xfa, 0x08, 0x7d, 0xa2, 0xbe, 0x4a, 0x07, 0x00, 0x49, 0x51, 0xb2,
	0x7b, 0x12, 0xf6, 0xdb, 0x6f, 0x21, 0xec, 0x87, 0xdd, 0x25, 0xa0, 0xb9, 0x12, 0x5c, 0xf2, 0xd9,
	0xb1, 0xfe, 0x41, 0x55, 0x63, 0x79, 0x55, 0x28, 0x5f, 0xf1, 0x30, 0xf0, 0xfe, 0x0f, 0xe5, 0x31,
	0x67, 0xd7, 0xe8, 0x31, 0x54, 0xee, 0x48, 0x94, 0x50, 0xb7, 0xd4, 0x29, 0x75, 0x6d, 0xdf, 0x18,
	0xde, 0x0f, 0x50, 0xbb, 0xa2, 0x22, 0x0e, 0x39, 0x43, 0x2e, 0xd4, 0xee, 0xcc, 0x32, 0xa5, 0x64,
	0xa6, 0x0a, 0x9d, 0x25, 0x61, 0x14, 0xb8, 0xfb, 0x26, 0x54, 0x1b, 0xde, 0x3f, 0x25, 0xa8, 0x8e,
	0x89, 0x20, 0xcb, 0x18, 0x21, 0x28, 0x4b, 0xfa, 0x51, 0xa6, 0x71, 0x7a, 0x8d, 0xfe, 0x07, 0x75,
	0xc6, 0xf1, 0x8c, 0xac, 0x69, 0xac, 0xe3, 0xea, 0x7e, 0x8d, 0xf1, 0x53, 0x65, 0xa2, 0xa7, 0x50,
	0x8f, 0x08, 0xbb, 0x4e, 0xc8, 0x35, 0x75, 0x2d, 0x1d, 0x92, 0xdb, 0xe8, 0x2b, 0x38, 0x0c, 0xa8,
	0xa4, 0x73, 0x89, 0x73, 0x4a, 0x59, 0x47, 0xb7, 0x0c, 0xfc, 0x26, 0x23, 0x7a, 0xd0, 0xbc, 0xa3,
	0x22, 0x5c, 0x84, 0x73, 0x22, 0xd5, 0x99, 0x2b, 0x9a, 0xb5, 0x85, 0xa1, 0xcf, 0xe1, 0x40, 0xf2,
	0x5b, 0xca, 0x62, 0x4c, 0x04, 0x4f, 0x58, 0xe0, 0x56, 0x3b, 0xa5, 0x6e, 0xc5, 0x6f, 0x1a, 0xb0,
	0xa7, 0x31, 0x95, 0x77, 0xcc, 0x13, 0x31, 0xa7, 0xb1, 0x5b, 0xeb, 0x58, 0xdd, 0x8a, 0x9f, 0x99,
	0xde, 0x5f, 0x16, 0x54, 0x47, 0x89, 0x5c, 0x25, 0x52, 0x65, 0x18, 0x10, 0x99, 0x89, 0xa7, 0xd7,
	0xe8, 0x0b, 0x68, 0x2d, 0x42, 0x16, 0x50, 0x81, 0x33, 0xdd, 0x8c, 0x3e, 0x07, 0x06, 0xcd, 0x74,
	0x7d, 0x0e, 0x75, 0xb2, 0x5a, 0x09, 0x4e, 0xe6, 0x37, 0xae, 0xd5, 0xb1, 0xba, 0xad, 0x13, 0xe7,
	0x38, 0xbd, 0xb1, 0x5e, 0x8a, 0xfb, 0x39, 0xe3, 0xfe, 0x91, 0xcb, 0x0f, 0x1c, 0xb9, 0x28, 0x60,
	0x65, 0x47, 0xc0, 0x6f, 0xa0, 0x9d, 0xad, 0xb1, 0x91, 0x8c, 0x9a, 0xbc, 0x6d, 0xdf, 0xc9, 0x1c,
	0xe7, 0x29, 0xfe, 0x90, 0xda, 0xb5, 0x07, 0xd5, 0xfe, 0x0c, 0x9a, 0x92, 0x4b, 0x12, 0x61, 0x73,
	0x0e, 0xb7, 0xae, 0x4f, 0xd5, 0xd0, 0xd8, 0x54, 0x43, 0xe8, 0x6b, 0x70, 0x0c, 0x65, 0x4e, 0x58,
	0x10, 0x2a, 0x85, 0x62, 0xd7, 0xd6, 0xb4, 0x43, 0x8d, 0x9f, 0xe5, 0x30, 0xfa, 0x14, 0x4c, 0x24,
	0x66, 0x64, 0x49, 0x63, 0x17, 0x34, 0x0b, 0x34, 0x34, 0x54, 0x08, 0xea, 0x42, 0xc5, 0xb8, 0x1a,
	0x1d, 0xab, 0xdb, 0x38, 0x41, 0x99, 0x60, 0xca, 0x3b, 0x91, 0x22, 0x64, 0xd7, 0xbe, 0x21, 0x78,
	0x7f, 0x5a, 0x00, 0x1b, 0x14, 0x75, 0xa0, 0x31, 0x27, 0x22, 0x08, 0x19, 0x89, 0x42, 0xb9, 0xd6,
	0xd7, 0x55, 0xf1, 0x8b, 0x90, 0xd2, 0xee, 0x8e, 0x8a, 0x19, 0x91, 0xe1, 0x32, 0x2b, 0xbe, 0xcc,
	0x56, 0xb7, 0xac, 0x76, 0xd5, 0x9a, 0xdb, 0xbe, 0x5e, 0x2b, 0x8c, 0x07, 0x41, 0xac, 0x75, 0xde,
	0xf7, 0xf5, 0x5a, 0x9d, 0x9f, 0x30, 0xc6, 0x25, 0x66, 0x7c, 0x49, 0x59, 0xaa, 0x2e, 0x68, 0x68,
	0xa8, 0x10, 0xf4, 0x13, 0x38, 0x05, 0x02, 0x96, 0xeb, 0x95, 0x11, 0xb6, 0x75, 0xf2, 0x24, 0xbf,
	0xfb, 0x9c, 0x3d, 0x5d, 0xaf, 0xa8, 0xdf, 0x22, 0x5b, 0xb6, 0x12, 0x9c, 0x2f, 0x16, 0x31, 0x95,
	0x38, 0x96, 0x44, 0xc8, 0x4c, 0x70, 0x83, 0x4d, 0x14, 0x84, 0x3e, 0x01, 0x48, 0x29, 0x94, 0x05,
	0xa9, 0xd4, 0xb6, 0x41, 0xfa, 0x2c, 0x50, 0x3b, 0xfc, 0xc6, 0x45, 0x10, 0xe3, 0x19, 0x5d, 0x70,
	0x41, 0x5d, 0xe8, 0x58, 0x5d, 0xdb, 0x6f, 0x68, 0xec, 0x54, 0x43, 0x2a, 0x0f, 0x43, 0x21, 0x0b,
	0x49, 0x85, 0x16, 0xdb, 0xf6, 0x41, 0x43, 0x3d, 0x85, 0xa0, 0x57, 0x3b, 0x4d, 0xd6, 0xec, 0x94,
	0xba, 0x8d, 0x93, 0xc7, 0x59, 0x0e, 0x57, 0x05, 0xdf, 0x76, 0xeb, 0x79, 0x7f, 0xec, 0x43, 0xb3,
	0xe8, 0x46, 0x2f, 0xa1, 0x31, 0xa3, 0xb1, 0xc4, 0x82, 0xc6, 0x49, 0x64, 0x46, 0x45, 0xe1, 0x62,
	0x7d, 0x8d, 0x9e, 0x13, 0x49, 0x7c, 0x50, 0x34, 0x63, 0xa3, 0x1f, 0xa1, 0xbd, 0x12, 0x74, 0x41,
	0x85, 0xa0, 0x41, 0x1a, 0xa9, 0xa6, 0x89, 0xf5, 0x1f, 0xa1, 0x4e, 0x4e, 0x36, 0xa0, 0x2a, 0x24,
	0x27, 0x20, 0x92, 0xe0, 0xb4, 0xa5, 0x31, 0x4b, 0xcc, 0xad, 0x57, 0xfc, 0x96, 0xc2, 0x27, 0x06,
	0x1e, 0x26, 0x4b, 0x74, 0x0c, 0x8f, 0x0a, 0x4c, 0xfc, 0x6b, 0x62, 0x2a, 0xc8, 0x94, 0x42, 0x7b,
	0x43, 0x7e, 0x67, 0x1c, 0x6a, 0x6c, 0x08, 0x2a, 0x45, 0x48, 0x4d, 0x69, 0x54, 0xfc, 0xcc, 0x54,
	0xe3, 0x92, 0x0a, 0xc1, 0x45, 0x5a, 0x17, 0xc6, 0xf0, 0xfe, 0xae, 0x02, 0x6c, 0x8e, 0x8a, 0x9e,
	0x41, 0xab, 0xf8, 0x77, 0x61, 0x90, 0xd6, 0x6a, 0x73, 0xf3, 0x4f, 0x83, 0x00, 0x1d, 0x41, 0xbb,
	0xc8, 0x92, 0xa1, 0x8c, 0x68, 0x3a, 0x65, 0x0e, 0x37, 0xc4, 0xa9, 0x82, 0xd5, 0xc0, 0x95, 0xe4,
	0x23, 0x67, 0x6a, 0x2f, 0x53, 0xd8, 0x35, 0x6d, 0x0f, 0x74, 0x29, 0x2c, 0x89, 0x9c, 0xdf, 0xd0,
	0x00, 0x17, 0xea, 0xbb, 0x91, 0x62, 0xaa, 0x7d, 0xd0, 0xb7, 0xf0, 0x28, 0xa3, 0x14, 0x1b, 0xc8,
	0xa4, 0x86, 0x52, 0xd7, 0x59, 0xa1, 0x8f, 0x5e, 0x81, 0xbb, 0x09, 0x60, 0x9c, 0x85, 0x73, 0x12,
	0xe1, 0x38, 0x5c, 0xae, 0x22, 0x9a, 0x26, 0xfe, 0x24, 0x8f, 0x4a, 0xdd, 0x13, 0xed, 0x45, 0xdf,
	0xc3, 0x93, 0xfb, 0x91, 0x8b, 0x24, 0x8a, 0x74, 0x8b, 0xd8, 0xfe, 0xe3, 0xdd, 0xb8, 0x8b, 0x24,
	0x8a, 0x54, 0x0e, 0xf3, 0x44, 0x08, 0xca, 0xa4, 0xc9, 0xa1, 0x6e, 0x72, 0x48, 0xb1, 0x2c, 0x87,
	0x8c, 0x52, 0xcc, 0xc1, 0x74, 0x06, 0x4a, 0x5d, 0x3b, 0x39, 0x6c, 0x02, 0x76, 0x72, 0x00, 0x93,
	0x43, 0x1e, 0x75, 0x2f, 0x87, 0xfb, 0x91, 0x3a, 0x87, 0x86, 0xc9, 0x61, 0x37, 0x4e, 0xe7, 0xa0,
	0x3e, 0x35, 0x6b, 0xc6, 0xd9, 0x7a, 0xa9, 0x3b, 0xa9, 0xee, 0x67, 0xa6, 0x3e, 0x7a, 0x44, 0xe2,
	0x38, 0xef, 0x17, 0xbc, 0x22, 0xf2, 0xc6, 0x3d, 0xd0, 0x9b, 0xa1, 0x6d, 0xd7, 0x98, 0xc8, 0x9b,
	0x07, 0x02, 0x04, 0x61, 0xb7, 0x6e, 0xeb, 0xa1, 0x00, 0x9f, 0xb0, 0x5b, 0xf4, 0x02, 0x76, 0x50,
	0x1c, 0x06, 0xb1, 0x7b, 0x68, 0xca, 0x7b, 0xdb, 0x33, 0x08, 0x62, 0xf5, 0x1d, 0xa2, 0x41, 0x28,
	0x71, 0x10, 0xc6, 0x92, 0xb0, 0x39, 0x75, 0x1d, 0x53, 0x9e, 0x0a, 0x3c, 0x4f, 0x31, 0xf4, 0x1c,
	0x50, 0x2c, 0xe9, 0x12, 0x6f, 0x33, 0xdb, 0x9a, 0xe9, 0x28, 0x4f, 0xbf, 0xc8, 0xfe, 0x0e, 0x40,
	0xdf, 0xac, 0x19, 0x87, 0x48, 0x8f, 0xc3, 0x76, 0xd6, 0xc5, 0x6f, 0x95, 0x47, 0x4f, 0x42, 0x7b,
	0x99, 0x2d, 0x8f, 0xde, 0x81, 0x9d, 0xe3, 0xa8, 0x0e, 0xe5, 0xe1, 0x68, 0xd8, 0x77, 0xf6, 0x90,
	0x0d, 0x95, 0xfe, 0x2f, 0xbd, 0xb3, 0xa9, 0x53, 0x52, 0xcb, 0x8b, 0xcb, 0x0f, 0x1f, 0xde, 0x3b,
	0xfb, 0xa8, 0x0d, 0x07, 0xe3, 0x9e, 0x3f, 0x1d, 0xf4, 0xde, 0x60, 0xe3, 0xb5, 0x8a, 0x90, 0x61,
	0x95, 0x8f, 0x5e, 0x43, 0x6b, 0x7b, 0xf2, 0xa2, 0x26, 0xd4, 0x87, 0x23, 0xdc, 0x1b, 0x0e, 0x47,
	0x53, 0x67, 0x0f, 0x01, 0x54, 0x27, 0x63, 0x3c, 0x1c, 0x5d, 0x39, 0x25, 0xe5, 0x39, 0x1b, 0xbd,
	0x3d, 0xd5, 0xd6, 0x3e, 0x3a, 0x00, 0x7b, 0x72, 0x79, 0x9a, 0x3a, 0xad, 0xa3, 0x67, 0x50, 0xcf,
	0x3e, 0xdf, 0xca, 0xf5, 0x73, 0xff, 0xd2, 0x1f, 0x4c, 0xa6, 0x83, 0x33, 0x73, 0xbe, 0xd3, 0xde,
	0xfb, 0xfe, 0xc4, 0x29, 0x9d, 0xfc, 0x5e, 0x82, 0xfa, 0xeb, 0xe1, 0x85, 0x7e, 0x10, 0xa0, 0x67,
	0x50, 0x1e, 0xab, 0x8f, 0x54, 0x33, 0x9f, 0x9f, 0x3c, 0x0c, 0x9e, 0xe6, 0x96, 0x7a, 0xa6, 0x79,
	0x7b, 0xe8, 0x4b, 0xb0, 0xae, 0xa8, 0xd8, 0x21, 0x1d, 0x16, 0x46, 0xae, 0x7a, 0x55, 0x78, 0x7b,
	0xe8, 0x05, 0xd8, 0x6a, 0x5f, 0xf3, 0xc1, 0x6c, 0xe5, 0x9b, 0xe8, 0x17, 0xd9, 0xd3, 0xdc, 0x36,
	0xef, 0x17, 0x6f, 0x6f, 0x66, 0xde, 0x85, 0x2f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x76, 0x78,
	0xfb, 0xdc, 0x2e, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GNFinderClient is the client API for GNFinder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GNFinderClient interface {
	Ping(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Pong, error)
	Ver(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Version, error)
	FindNames(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Output, error)
}

type gNFinderClient struct {
	cc *grpc.ClientConn
}

func NewGNFinderClient(cc *grpc.ClientConn) GNFinderClient {
	return &gNFinderClient{cc}
}

func (c *gNFinderClient) Ping(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/protob.GNFinder/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gNFinderClient) Ver(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Version, error) {
	out := new(Version)
	err := c.cc.Invoke(ctx, "/protob.GNFinder/Ver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gNFinderClient) FindNames(ctx context.Context, in *Params, opts ...grpc.CallOption) (*Output, error) {
	out := new(Output)
	err := c.cc.Invoke(ctx, "/protob.GNFinder/FindNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GNFinderServer is the server API for GNFinder service.
type GNFinderServer interface {
	Ping(context.Context, *Void) (*Pong, error)
	Ver(context.Context, *Void) (*Version, error)
	FindNames(context.Context, *Params) (*Output, error)
}

func RegisterGNFinderServer(s *grpc.Server, srv GNFinderServer) {
	s.RegisterService(&_GNFinder_serviceDesc, srv)
}

func _GNFinder_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GNFinderServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protob.GNFinder/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GNFinderServer).Ping(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _GNFinder_Ver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GNFinderServer).Ver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protob.GNFinder/Ver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GNFinderServer).Ver(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _GNFinder_FindNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Params)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GNFinderServer).FindNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protob.GNFinder/FindNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GNFinderServer).FindNames(ctx, req.(*Params))
	}
	return interceptor(ctx, in, info, handler)
}

var _GNFinder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protob.GNFinder",
	HandlerType: (*GNFinderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _GNFinder_Ping_Handler,
		},
		{
			MethodName: "Ver",
			Handler:    _GNFinder_Ver_Handler,
		},
		{
			MethodName: "FindNames",
			Handler:    _GNFinder_FindNames_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protob.proto",
}
